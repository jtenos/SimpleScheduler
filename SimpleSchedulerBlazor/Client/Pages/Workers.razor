@page "/workers"
@using SimpleSchedulerApiModels
@using SimpleSchedulerBlazor.Client.Components.Workers

@if (Loading)
{
    <LoadingAnimation />
}
else
{
    <div class="container" style="margin-top: 25px;">
        <EditForm EditContext="SearchEditContext" class="d-flex">
            <div class="btn-group" role="group" style="margin-right: 10px;">
                <InputRadioGroup Name="ActiveFilter" @bind-Value="SearchCriteria.ActiveType">

                    <InputRadio Value="SearchModel.ACTIVE" class="btn-check" autocomplete="off" id="ActiveFilter-Active" />
                    <label class="btn btn-outline-primary" for="ActiveFilter-Active">Active</label>

                    <InputRadio Value="SearchModel.INACTIVE" class="btn-check" autocomplete="off" id="ActiveFilter-Inactive" />
                    <label class="btn btn-outline-primary" for="ActiveFilter-Inactive">Inactive</label>

                </InputRadioGroup>
            </div>
            <AsYouTypeInputText class="form-control"
                            placeholder="Search for a worker..."
                            @bind-Value="SearchCriteria.SearchText"
                            @ref="SearchTextBox" />
        </EditForm>
    </div>

    foreach ((WorkerWithSchedules w1, WorkerWithSchedules? w2, WorkerWithSchedules? w3) in WorkerGroups)
    {
        <WorkerGroupDisplay Workers="new[] { w1, w2, w3 }" AllWorkers="AllWorkers" WorkersComponent="this" @ref="CurrentWorkerGroupDisplay" />
    }
}
