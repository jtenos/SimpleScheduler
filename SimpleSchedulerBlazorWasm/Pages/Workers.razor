@page "/workers"
@page "/workers/filter/{WorkerID:long?}"
@using SimpleSchedulerApiModels
@using SimpleSchedulerBlazorWasm.Components.Workers

@if (Loading)
{
    <LoadingAnimation />
}
else
{
    <div class="container" style="margin-top: 25px;">
        <EditForm EditContext="SearchEditContext" class="d-flex justify-content-center">
            <div class="btn-group" role="group" style="margin-right: 10px;">
                <InputRadioGroup Name="ActiveFilter" @bind-Value="SearchCriteria.ActiveType">

                    <InputRadio Value="SearchModel.ACTIVE" class="btn-check" autocomplete="off" id="ActiveFilter-Active" />
                    <label class="btn btn-outline-primary" for="ActiveFilter-Active">Active</label>

                    <InputRadio Value="SearchModel.INACTIVE" class="btn-check" autocomplete="off" id="ActiveFilter-Inactive" />
                    <label class="btn btn-outline-primary" for="ActiveFilter-Inactive">Inactive</label>

                </InputRadioGroup>
            </div>
            <AsYouTypeInputText class="form-control"
                            placeholder="Search for a worker..."
                            style="margin-right: 10px; width: 400px;"
                            @bind-Value="SearchCriteria.SearchText"
                            @ref="SearchTextBox" />
            <button class="btn btn-primary" @onclick="CreateWorker"><i class="bi bi-plus-circle"></i> Create Worker</button>
        </EditForm>
    </div>

    foreach (WorkerWithSchedules w in FilteredWorkers)
    {
        <WorkerDisplay Worker="w" AllWorkers="AllWorkers" WorkersComponent="this" />
    }
}
