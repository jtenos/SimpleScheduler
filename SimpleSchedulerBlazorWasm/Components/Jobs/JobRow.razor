<div class="job-container d-flex job-row-@Job.StatusCode" data-job-id="@Job.ID">
    <div class="worker-name-container">
        <div class="worker-name">
            @Worker.WorkerName
        </div>
        @if (ParentWorker is not null)
        {
            <div>
                (Child of @ParentWorker.WorkerName)
            </div>
        }
    </div>
    <div class="queue-date-container" title="Inserted @Job.InsertDateUTC.FormatDate() @Job.InsertDateUTC.FormatTime()">
        <div class="queue-date-full">
            <div>@Job.QueueDateUTC.FormatDate()</div>
            <div>@Job.QueueDateUTC.FormatTime()</div>
        </div>
    </div>
    <div class="status-container">
        @if (Loading)
        {
            <LoadingAnimation />
        }
        else
        {
            <div>
                @Job.StatusCode
                @if (Job.StatusCode == "SUC")
                {
                    @: (@Job.FriendlyDuration)
                }
            </div>
            @if (Job.StatusCode == "NEW")
            {
                <div>
                    <button class="btn btn-xs btn-outline-primary" @onclick="CancelJob">Cancel</button>
                </div>
            }
            else if (Job.StatusCode == "ERR")
            {
                <div>
                    <button class="btn btn-xs btn-outline-primary" @onclick="AcknowledgeError">Acknowledge</button>
                </div>
            }
            else if (Job.StatusCode == "SUC")
            {
                <div>
                    @Job.CompleteDateUTC.FormatTime()
                </div>
            }

            @if (Job.HasDetailedMessage)
            {
                <div>
                    <button class="btn btn-xs btn-outline-primary" @onclick="ViewDetailedMessage">View Results</button>
                </div>

            }
        }
    </div>
</div>
